面试题 02.05. 链表求和
给定两个用链表表示的整数，每个节点包含一个数位。

这些数位是反向存放的，也就是个位排在链表首部。

编写函数对这两个整数求和，并用链表形式返回结果。

 

示例：

输入：(7 -> 1 -> 6) + (5 -> 9 -> 2)，即617 + 295
输出：2 -> 1 -> 9，即912


思路：链表的基本操作和数字相加

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int carry = 0;  // 进位
        ListNode* dummy = new ListNode(0);  // 链表标配的前置节点
        ListNode* cur = dummy;   // 实际对cur节点操作
        while(l1 != NULL || l2 != NULL) {
            int num1 = (l1 == NULL ? 0: l1->val);
            int num2 = (l2 == NULL ? 0: l2->val);
            int sum = num1 + num2 + carry;
            carry = sum / 10; // 进位
            ListNode* node = new ListNode(sum % 10); // 余位
            l1 = (l1 == NULL ? NULL : l1->next);
            l2 = (l2 == NULL ? NULL : l2->next);
            cur->next = node;
            cur = cur->next;
        }
        // 全部加完可能会进1位
        if(carry == 1){
            cur->next = new ListNode(carry);
        }
        return dummy->next;
    }
};
